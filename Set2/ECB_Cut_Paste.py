from Crypto.Cipher import AES
from Set2 import Oracles, PKCS7_Padding

# Generate a random key to be used for encryption and decryption
KEY = Oracles.rand_key()


class User:
    def __init__(self, email, uid, role):
        self.email = email
        self.uid = uid
        self.role = role

    def __str__(self):
        # pretty printing
        return f"email: {self.email}\nuid: {self.uid}\nrole: {self.role}"

    def __repr__(self):
        # user-string representation (encoding) for the User object
        return f"email={self.email}&uid={self.uid}&role={self.role}"


def parse_usr(inp_str: str):
    """Create user profile from the encoded user-string"""
    usr_params = inp_str.split('&')
    email = usr_params[0].split('=')[1]
    uid = usr_params[1].split('=')[1]
    role = usr_params[2].split('=')[1]
    return User(email=email, uid=uid, role=role)


def profile_for(email: str):
    """Create user profile with given email, encode into a user-string and encrypt it"""
    escaped_email = email.replace("&", "").replace("=", "")  # eat up the meta characters

    enc_suite = AES.new(mode=AES.MODE_ECB, key=KEY)
    usr_encoded = repr(User(email=escaped_email, uid=10, role="user")).encode()  # create user-string

    # Pad plaintext
    usr_encoded = PKCS7_Padding.getw_and_rpad(usr_encoded)

    return enc_suite.encrypt(usr_encoded)  # return encrypted user-string


def decrypt_parse(ciph: bytearray):
    """Decrypt the user-string and parse it"""
    enc_suite = AES.new(mode=AES.MODE_ECB, key=KEY)
    pt = enc_suite.decrypt(ciph).replace(b'\x04', b'').decode()
    return parse_usr(pt)


if __name__ == '__main__':
    # SHENANIGANS HAPPENS HERE

    # Note that we only use inputs for profile_for() to get valid ct's and only make
    # manipulations with the ct's resulting from that function call.
    # I.e., we don't even know the key that is used for encryption,
    # we just have access to the function that creates and encrypts
    # user profiles based on provided email address

    # Phase 1:
    # Get valid encryption for the string "admin" in a new block
    admin_pad_email = b"a" * 10 + PKCS7_Padding.getw_and_rpad(b'admin')
    admin_block_encr = profile_for(admin_pad_email.decode())[16:32]

    # Phase 2:
    # Substitute the last block for a profilefor() output with the ct from previous block
    hackerman_email = 'memes@mem.com'  # 13 bytes long
    orig_encr = profile_for(hackerman_email)
    # Final encrypted string consists of:
    # First 2 blocks from the original ct (last block containing the "user" role is omitted)
    # followed by the 1-block ct ("admin"+padding) from Phase 1
    hackerman_encr = orig_encr[:32] + admin_block_encr

    # check if we got valid ct with our email as admin
    print(decrypt_parse(hackerman_encr))


    # ######################################################################################################################################################
    # ######################################################################################################################################################
    # ######################################################################################################################################################
    # ######################################################################################################################################################
    # ######################################################################################################################################################
    # ######################################################################################################################################################
    # ######################################################################################################################################################
    # ######################################################################################################################################################
    # ######################################################################################################################################################
    # ######################################################################################################################################################
    # #####@xxMxx###nnxMW@######xnnzn@#WxMWW@##@MxxxxxMMMxxxxx@###MxxxxxW#@xxMMxxxxxM@xxxxxxxMMM@####@xxxxxx@#####xx+:zMW##@###WxxxM@MMMMWWxnnnznM@W@xxxMM@#
    # #####;``...@#@```.`;#####n`````n#WnxW@W+,```````.`+`````n###````.`;x:`````````:z```````````:n###``````+####n```...,#####W.````*MxxxMM``````M@WM``...*#
    # ####@``:;::##x`.,:,;####W``..,,*#MnM@#```..,,,,,,,*`.,,.x@+`...,.`.``..,...,,.*i`......,,,,.`x#;`.,,,,:###@.`.,,,,;#####;`..,:,xnnnx#`.,,,.#@@#`,;;,z#
    # ####x`..,.*##+`...`n####i````..;#xnWz```.``......*:````.Mi`...`.,.``....`....`x.```.........`i@.```..`*@##+````..`z##@@#````..`nnzz#;```...;MW;...,,M@
    # ####i``...+zz,````inznz*```````;@xMn.````````````n`````i:`````,Wi````````````;M``````````````*M```````*##+.``````,####*````````i+**i``````.:#+.``..###
    # ####;````;@#M`````x###W,```````;Wxx:`````,#n+.;MM#````.#`````;#x`````.+nx+.,x@z`````izz#i````:z```````z#@:```````.M@#@,````````n@WMn```````.#x```.`W@M
    # ###W.````;n#;`````####i````````,nM#`````.W###@@@@;````..````.@@,`````+xnz#ixxMi`````n@#@#````.*```````*@z`````````#@#+````````.W###+````````iz````,@Wn
    # ###n`````````````.n##x````.;````*W: ````########@.``````````##n``````````````:` ````::,,`````*:````````x:````````.:@M`````;````####;`````````;````.@#@
    # ###*`````````````.@#@, ```+#` ``:x` ````W@######n` ```````.zW#i``````````````;` ````` ``````.x` ```````:`````````,`x: ```*n ```,@#@.````,`````````:@##
    # ###,`````````````,##*`````+;`````:````,,@@@#####+``````.:,#WWW.````````````.`:,```````````..++`````````````````,.z;;`````x#`````W#W````.+```.````.*@@@
    # ##@,MW@WMMxxWWMW;in#.MWWW;.+xWMz``,M@@i*M@@@@##@,i@WWxMxM*#@@M`nMMxzzzzzznni,,z@WWWMMMxnz,.*W:*xMn`nMMi;MMx.nWM#,M#`nWWWzi,zWW@:zMz;WWW+#iWWx,M@@+M###
    # ##W*@@@+++`.+@WM:nz*+WWWWWMMn###.*;Mxx;x@#####@x`*WMn,xnzn:@@M:xzz+,::::,,:;i:nMxn;;,#Wn#`,Wz:###*`#Mx+#z#;,nnn;+#`;@@WMMMMxnnMinxz*MxMiziMxxxMW@#@@#@
    # ##*.ii+;@#M:,;i;,n,.;;;iii;;:,,:.:.,,;,#WWWWWMxn`,:;:+,:,;,#@n`,,:,`*n**:..`.`::;,zx;.:::..#n`,.,,.,::::::..,,:`i;`:;::::::,,:;:+W,,:;i*@;;;;:;i*z###@
    # ##:`...+##@.``..;n`````````````````````````````;````.x.```..MW`````````````+*````,@#z``````xz````:n``````.i```````````````````.`i@```..n#+`......x###@
    # #@.``.`x##n`````;.````;@xiMM,`````````````````.,````i#i`````i#;` ``````````n* ```*##@.`````z*````+W` ````#+```` `````,@###z`````:x`````W#M`````.`W###@
    # #x````.@###```````````M#####, ```z+` `````````;: ```z#M.  ``.@x. `````````.@; ```n###i` ```+* ```z@` ```:@, `````````i@###@.````,+````,##@:`````:@####
    # #+````i###i``````````#######i ```*@;` ````````*,  ``W##+`  ` +##.`````````i#,  ``@###n` ```zi   `,#`  ``xM` ``:;````.,W####;` ``.*` ``*###+`````z#####
    # z+*+++z###i****.`,+++z######ii*:*W#@n*iii*****x;i++####@++++++##M#*****+++M@+*++#####@#*++*nz*++#W#**++z#ni***n+***+i:+z#zz*;;.`i#i+++z+++++**,`++++++
    # #@#@#@@###@@W@#@W@##########@@############################@##################################################################@@W@@@###@###@@##WM#####@
    # #########################@############################################################################################################################
    # ######################################################################################################################################################
    # ######################################################################################################################################################
    # ######################################################################################################################################################
    # ######################################################################################################################################################
    # ######################################################################################################################################################
    # ######################################################################################################################################################
    # ######################################################################################################################################################
    # ######################################################################################################################################################
    # ######################################################################################################################################################
    # ######################################################################################################################################################
    # ######################################################################################################################################################
    # ######################################################################################################################################################

